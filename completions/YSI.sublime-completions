
{
	"scope": "source.pawn - variable.other.pawn",
	"completions":
	[

		// y_hooks.inc
		"Y_HOOKS_CONTINUE_RETURN_1",
		"Y_HOOKS_CONTINUE_RETURN_0",
		"Y_HOOKS_BREAK_RETURN_0",
		"Y_HOOKS_BREAK_RETURN_1",

		// y_timers.inc
		{"trigger": "defer", "contents": "defer ${1:name}(${2:args})"},
		{"trigger": "stop", "contents": "stop ${1:timer}"},
		{"trigger": "repeat", "contents": "repeat ${1:name}(${2:args})"},

		// y_bit.inc
		{"trigger": "BitArray", "contents": "BitArray:${1:name}<${2:size}>"},
		{"trigger": "Bit_Set", "contents": "Bit_Set(${1:BitArray:array<>}, ${2:slot}, ${3:bool:set})"},
		{"trigger": "Bit_FastSet", "contents": "Bit_FastSet(${1:BitArray:array<>}, ${2:slot}, ${3:bool:set})"},
		{"trigger": "Bit_SetAll", "contents": "Bit_SetAll(${1:BitArray:array<>}, ${2:bool:set})"},
		{"trigger": "Bit_Count", "contents": "Bit_Count(${1:BitArray:array<>}, ${2:size = sizeof(arrat)})"},
		{"trigger": "Bit_Get", "contents": "Bit_Get(${1:BitArray:array<>}, ${2:slot})"},
		{"trigger": "Bit_Let", "contents": "Bit_Let(${1:BitArray:array<>}, ${2:slot})"},
		{"trigger": "Bit_Vet", "contents": "Bit_Vet(${1:BitArray:array<>}, ${2:slot})"},
		{"trigger": "Bit_GetBit", "contents": "Bit_GetBit(${1:BitArray:array<>}, ${2:slot})"},
		{"trigger": "Bit_Mask", "contents": "Bit_Mask(${1:value})"},
		{"trigger": "Bit_Bits", "contents": "Bit_Bits(${1:size})"},
		{"trigger": "Bit_Slot", "contents": "Bit_Slot(${1:value})"},
		{"trigger": "Bit_Display", "contents": "Bit_Display(${1:BitArray:array<>}, ${2:size = sizeof(array)})"},

		// y_commands.inc
		{"trigger": "Command_GetID", "contents": "Command_GetID(${1:funcname[]})"},
		{"trigger": "Command_SetPlayer", "contents": "Command_SetPlayer(${1:command}, ${2:playerid}, ${3:set})"},
		{"trigger": "Command_SetPlayerNamed", "contents": "Command_SetPlayerNamed(${1:command[]}, ${2:playerid}, ${3:set})"},
		{"trigger": "Command_GetPlayer", "contents": "Command_GetPlayer(${1:command}, ${2:playerid})"},
		{"trigger": "Command_GetPlayerNamed", "contents": "Command_GetPlayerNamed(${1:command[]}, ${2:playerid})"},
		{"trigger": "Command_AddAlt", "contents": "Command_AddAlt(${1:oldid}, ${2:altname[]})"},
		{"trigger": "Command_AddAltNamed", "contents": "Command_AddAltNamed(${1:old[]}, ${2:altname[]})"},
		{"trigger": "Command_ReProcess", "contents": "Command_ReProcess(${1:playerid}, ${2:cmdtext[]}, ${3:help})"},
		{"trigger": "Command_GetName", "contents": "Command_GetName(${1:id})"},
		{"trigger": "Command_GetDisplay", "contents": "Command_GetDisplay(${1:command}, ${2:playerid})"},
		{"trigger": "Command_GetDisplayNamed", "contents": "Command_GetDisplayNamed(${1:command[]}, ${2:playerid})"},
		{"trigger": "Command_GetPlayerCommandCount", "contents": "Command_GetPlayerCommandCount(${1:playerid})"},
		{"trigger": "Command_GetNext", "contents": "Command_GetNext(${1:index}, ${2:playerid})"},
		{"trigger": "Command_SetDeniedReturn", "contents": "Command_SetDeniedReturn(${1:set})"},
		{"trigger": "Command_GetDeniedReturn", "contents": "Command_GetDeniedReturn()"},

		// y_va.inc
		{"trigger": "va_CallRemoteFunction", "contents": "va_CallRemoteFunction(${1:const function[]}, ${2:const fmat[]}, ${3:va_:STATIC_ARGS})"},
		{"trigger": "va_CallLocalFunction", "contents": "va_CallLocalFunction(${1:const function[]}, ${2:const fmat[]}, ${3:va_:STATIC_ARGS})"},
		{"trigger": "va_SetTimerEx", "contents": "va_SetTimerEx(${1:const function[]}, ${2:interval}, ${3:bool:repeating}, ${4:const fmat[]}, ${5:va_:STATIC_ARGS})"},
		{"trigger": "va_format", "contents": "va_format(${1:out[]}, ${2:size}, ${3:const fmat[]}, ${4:va_:STATIC_ARGS})"},
		{"trigger": "va_return", "contents": "va_return(${1:const fmat[]}, ${2:va_:STATIC_ARGS})"},
		{"trigger": "va_strlen", "contents": "va_strlen(${1:arg})"},
		{"trigger": "va_getstring", "contents": "va_getstring(${1:dest[]}, ${2:arg}, ${3:len = sizeof (dest})"},
		{"trigger": "va_CreatePlayerTextDraw", "contents": "va_CreatePlayerTextDraw(${1:playerid}, ${2:Float:x}, ${3:Float:y}, ${4:fmat[]}, ${5:va_args<>})"},
		{"trigger": "va_TextDrawCreate", "contents": "va_TextDrawCreate(${1:Float:x}, ${2:Float:y}, ${3:fmat[]}, ${4:va_args<>})"},
		{"trigger": "va_SendClientMessage", "contents": "va_SendClientMessage(${1:playerid}, ${2:colour}, ${3:const fmat[]}, ${4:va_args<>})"},
		{"trigger": "va_SendClientMessageToAll", "contents": "va_SendClientMessageToAll(${1:colour}, ${2:const fmat[]}, ${3:va_args<>})"},
		{"trigger": "va_SendPlayerMessageToPlayer", "contents": "va_SendPlayerMessageToPlayer(${1:playerid}, ${2:senderid}, ${3:const fmat[]}, ${4:va_args<>})"},
		{"trigger": "va_SendPlayerMessageToAll", "contents": "va_SendPlayerMessageToAll(${1:senderid}, ${2:const fmat[]}, ${3:va_args<>})"},
		{"trigger": "va_GameTextForPlayer", "contents": "va_GameTextForPlayer(${1:playerid}, ${2:const fmat[]}, ${3:time}, ${4:style}, ${5:va_args<>})"},
		{"trigger": "va_GameTextForAll", "contents": "va_GameTextForAll(${1:const fmat[]}, ${2:time}, ${3:style}, ${4:va_args<>})"},
		{"trigger": "va_print", "contents": "va_print(${1:const fmat[]}, ${2:va_args<>})"},
		{"trigger": "va_fprintf", "contents": "va_fprintf(${1:File:fhnd}, ${2:const fmat[]}, ${3:va_args<>})"},

		// y_ini.inc
		{"trigger": "INI_Int", "contents": "INI_Int(${1:name}, ${2:variable})"},
		{"trigger": "INI_Float", "contents": "INI_Float(${1:name}, ${2:variable})"},
		{"trigger": "INI_Hex", "contents": "INI_Hex(${1:name}, ${2:variable})"},
		{"trigger": "INI_Bin", "contents": "INI_Bin(${1:name}, ${2:variable})"},
		{"trigger": "INI_Bool", "contents": "INI_Bool(${1:name}, ${2:variable})"},
		{"trigger": "INI_String", "contents": "INI_String(${1:name}, ${2:variable})"},
		{"trigger": "INI_WriteInt", "contents": "INI_WriteInt(${1:INI:file}, ${2:name[]}, ${3:data})"},
		{"trigger": "INI_WriteFloat", "contents": "INI_WriteFloat(${1:INI:file}, ${2:name[]}, ${3:Float:data}, ${4:accuracy = 6})"},
		{"trigger": "INI_WriteHex", "contents": "INI_WriteHex(${1:INI:file}, ${2:name[]}, ${3:data})"},
		{"trigger": "INI_WriteBin", "contents": "INI_WriteBin(${1:INI:file}, ${2:name[]}, ${3:data})"},
		{"trigger": "INI_WriteBool", "contents": "INI_WriteBool(${1:INI:file}, ${2:name[]}, ${3:bool:data})"},
		{"trigger": "INI_WriteString", "contents": "INI_WriteString(${1:INI:file}, ${2:name[]}, ${3:data[]})"},
		{"trigger": "INI_AtStartOfLine", "contents": "INI_AtStartOfLine(${1:str[]}, ${2:index})"},
		{"trigger": "INI_IsEscapeSequence", "contents": "INI_IsEscapeSequence(${1:str[]}, ${2:pos})"},
		{"trigger": "INI_ReverseWhitespace", "contents": "INI_ReverseWhitespace(${1:str[]}, ${2:pos})"},
		{"trigger": "INI_FindString", "contents": "INI_FindString(${1:str[]}, ${2:sub[]}, ${3:pos = -1})"},
		{"trigger": "INI_ParseFile", "contents": "INI_ParseFile(${1:fname[]}, ${2:remoteFormat[]}, ${3:bool:bFileFirst = false}, ${4:bool:bExtra = false}, ${5:extra = 0}, ${6:bool:bLocal = true}, ${7:bool:bPassTag = false}, ${8:bool:bFilter = true}, ${9:filter[] = \"\"})"},
		{"trigger": "INI_Open", "contents": "INI_Open(${1:filename[]})"},
		{"trigger": "INI_Close", "contents": "INI_Close(${1:INI:file})"},
		{"trigger": "INI_SetTag", "contents": "INI_SetTag(${1:INI:file}, ${2:tag[]})"},
		{"trigger": "INI_DeleteTag", "contents": "INI_DeleteTag(${1:INI:file}, ${2:tag[]})"},
		{"trigger": "INI_RemoveEntry", "contents": "INI_RemoveEntry(${1:INI:file}, ${2:name[]})"},

		// y_classes.inc
		{"trigger": "Player_InSelection", "contents": "Player_InSelection(${1:playerid})"},
		{"trigger": "Player_HasSpawned", "contents": "Player_HasSpawned(${1:playerid})"},
		{"trigger": "Player_IsSpawned", "contents": "Player_IsSpawned(${1:playerid})"},
		{"trigger": "Class_ForceReselection", "contents": "Class_ForceReselection(${1:playerid})"},
		{"trigger": "Class_ReturnToSelection", "contents": "Class_ReturnToSelection(${1:playerid})"},
		{"trigger": "Class_SetReselection", "contents": "Class_SetReselection(${1:playerid}, ${2:bool:s})"},
		{"trigger": "Class_SetSelection", "contents": "Class_SetSelection(${1:playerid}, ${2:bool:s})"},
		{"trigger": "Class_Spawn", "contents": "Class_Spawn(${1:playerid})"},
		{"trigger": "Class_ShowHold", "contents": "Class_ShowHold(${1:playerid})"},
		{"trigger": "Class_HideHold", "contents": "Class_HideHold(${1:playerid})"},
		{"trigger": "Class_DisableReselection", "contents": "Class_DisableReselection(${1:playerid})"},
		{"trigger": "Class_EnableReselection", "contents": "Class_EnableReselection(${1:playerid})"},
		{"trigger": "Class_DisableSelection", "contents": "Class_DisableSelection(${1:playerid})"},
		{"trigger": "Class_EnableSelection", "contents": "Class_EnableSelection(${1:playerid})"},
		{"trigger": "Class_Spectate", "contents": "Class_Spectate(${1:playerid})"},
		{"trigger": "Class_Delete", "contents": "Class_Delete(${1:classid})"},
		{"trigger": "Class_Disable", "contents": "Class_Disable(${1:classid})"},
		{"trigger": "Class_Enable", "contents": "Class_Enable(${1:classid}, ${2:bool:toggle})"},
		{"trigger": "Class_Add", "contents": "Class_Add(${1:skin}, ${2:Float:x}, ${3:Float:y}, ${4:Float:z}, ${5:Float:a}, ${6:...})"},
		{"trigger": "Class_AddEx", "contents": "Class_AddEx(${1:Group:forgroup}, ${2:Group:setgroup}, ${3:skin}, ${4:Float:x}, ${5:Float:y}, ${6:Float:z}, ${7:Float:a}, ${8:...})"},
		{"trigger": "Class_AddForGroup", "contents": "Class_AddForGroup(${1:Group:group}, ${2:skin}, ${3:Float:x}, ${4:Float:y}, ${5:Float:z}, ${6:Float:a}, ${7:...})"},
		{"trigger": "Class_AddWithGroupSet", "contents": "Class_AddWithGroupSet(${1:Group:group}, ${2:skin}, ${3:Float:x}, ${4:Float:y}, ${5:Float:z}, ${6:Float:a}, ${7:...})"},

		// y_groups.inc
		{"trigger": "Group_IsValid", "contents": "Group_IsValid(${1:Group:g})"},
		{"trigger": "Group_Destroy", "contents": "Group_Destroy(${1:Group:g})"},
		{"trigger": "Group_SetPlayer", "contents": "Group_SetPlayer(${1:Group:g}, ${2:playerid}, ${3:bool:s})"},
		{"trigger": "Group_SetBalancedArray", "contents": "Group_SetBalancedArray(${1:p}, ${2:Group:gs[]}, ${3:c = sizeof (gs})"},
		{"trigger": "Group_SetBalanced", "contents": "Group_SetBalanced(${1:playerid}, ${2:Group:g0}, ${3:Group:g1}, ${4:Group:...})"},
		{"trigger": "Group_GetPlayer", "contents": "Group_GetPlayer(${1:Group:g}, ${2:p})"},
		{"trigger": "Group_SetName", "contents": "Group_SetName(${1:Group:g}, ${2:string:n[]})"},
		{"trigger": "Group_GetName", "contents": "Group_GetName(${1:Group:g})"},
		{"trigger": "Group_GetID", "contents": "Group_GetID(${1:string:name[]})"},
		{"trigger": "Group_SetGang", "contents": "Group_SetGang(${1:Group:g}, ${2:bool:n})"},
		{"trigger": "Group_GetGang", "contents": "Group_GetGang(${1:Group:g})"},
		{"trigger": "Group_SetColour", "contents": "Group_SetColour(${1:Group:g}, ${2:c})"},
		{"trigger": "Group_GetColour", "contents": "Group_GetColour(${1:Group:g})"},
		{"trigger": "Group_GetCount", "contents": "Group_GetCount(${1:Group:g})"},
		{"trigger": "Group_Create", "contents": "Group_Create(${1:string:name[] = \"\"})"},
		{"trigger": "Group_SetGroup", "contents": "Group_SetGroup(${1:Group:g}, ${2:Group:el}, ${3:bool:s})"},
		{"trigger": "Group_SetGlobalGroup", "contents": "Group_SetGlobalGroup(${1:Group:el}, ${2:bool:s})"},
		{"trigger": "Group_GetGroup", "contents": "Group_GetGroup(${1:Group:g}, ${2:Group:el})"},
		{"trigger": "Group_GetGlobalGroup", "contents": "Group_GetGlobalGroup(${1:Group:el})"},
		{"trigger": "Group_IsDescendant", "contents": "Group_IsDescendant(${1:Group:p}, ${2:Group:c})"},
		{"trigger": "Group_AddChild", "contents": "Group_AddChild(${1:group:g}, ${2:Group:el}, ${3:true})"},
		{"trigger": "Group_RemoveChild", "contents": "Group_RemoveChild(${1:group:g}, ${2:Group:el}, ${3:false})"},
		{"trigger": "Group_IsChild", "contents": "Group_IsChild(${1:Group:g}, ${2:Group:el})"},

		// y_dialog.inc
		"MAX_DIALOGS",
		{"trigger": "Dialog_ObtainID", "contents": "Dialog_ObtainID()"},
		{"trigger": "Dialog_TryObtainID", "contents": "Dialog_TryObtainID(${1:id})"},
		{"trigger": "Dialog_Get", "contents": "Dialog_Get(${1:playerid})"},
		{"trigger": "Dialog_Garbage", "contents": "Dialog_Garbage(${1:dialogid})"},
		{"trigger": "Dialog_Free", "contents": "Dialog_Free(${1:dialogid})"},
		{"trigger": "Dialog_Set", "contents": "Dialog_Set(${1:playerid}, ${2:dialogid})"},
		{"trigger": "Dialog_ShowCallback", "contents": "Dialog_ShowCallback(${1:playerid}, ${2:callback:callback}, ${3:style}, ${4:string:title[]}, ${5:string:caption[]}, ${6:string:button1[]}, ${7:string:button2[] = \"\"}, ${8:dialog = -1})"},
		{"trigger": "Dialog_ShowCallbackData", "contents": "Dialog_ShowCallbackData(${1:playerid}, ${2:callback[E_CALLBACK_DATA]}, ${3:style}, ${4:string:title[]}, ${5:string:caption[]}, ${6:string:button1[]}, ${7:string:button2[] = \"\"}, ${8:dialog = -1})"},
		{"trigger": "Dialog_Show", "contents": "Dialog_Show(${1:playerid}, ${2:style}, ${3:string:title[]}, ${4:string:caption[]}, ${5:string:button1[]}, ${6:string:button2[] = \"\"}, ${7:dialog = -1})"},
		{"trigger": "Dialog_Hide", "contents": "Dialog_Hide(${1:playerid})"},
		{"trigger": "Dialog_GetMaster", "contents": "Dialog_GetMaster(${1:dialogid})"},
		{"trigger": "Dialog_SetCallback", "contents": "Dialog_SetCallback(${1:dialogid}, ${2:callback:callback})"},
		{"trigger": "Dialog_SetCallbackData", "contents": "Dialog_SetCallbackData(${1:dialogid}, ${2:callback[E_CALLBACK_DATA]})"},

		// y_iterate.inc
		{"trigger": "Iterator", "contents": "Iterator:${1:Iterator:Name<>}<${2:size}>;"},
		{"trigger": "Iter_Init", "contents": "Iter_Init(${1:IteratorArray:Name[]<>})"},
		{"trigger": "Iter_Add", "contents": "Iter_Add(${1:Iterator:Name<>}, ${2:value})"},
		{"trigger": "Iter_Remove", "contents": "Iter_Remove(${1:Iterator:Name<>}, ${2:value})"},
		{"trigger": "Iter_Free", "contents": "Iter_Free(${1:Iterator:Name<>})"},
		{"trigger": "Iter_FreeMulti", "contents": "Iter_FreeMulti(${1:Iterator:Name<>})"},
		{"trigger": "Iter_Contains", "contents": "Iter_Contains(${1:Iterator:Name<>}, ${2:value})"},
		{"trigger": "Iter_GetMulti", "contents": "Iter_GetMulti(${1:Iterator:Name<>}, ${2:value})"},
		{"trigger": "Iter_SafeRemove", "contents": "Iter_SafeRemove(${1:Iterator:Name<>}, ${2:value}, ${3:&next})"},
		{"trigger": "Iter_RandomAdd", "contents": "Iter_RandomAdd(${1:Iterator:Name<>})"},
		{"trigger": "Iter_RandomRemove", "contents": "Iter_RandomRemove(${1:Iterator:Name<>})"},
		{"trigger": "Iter_RandomFree", "contents": "Iter_RandomFree(${1:Iterator:Name<>})"},
		{"trigger": "Iter_Random", "contents": "Iter_Random(${1:Iterator:Name<>})"},
		{"trigger": "Iter_Count", "contents": "Iter_Count(${1:Iterator:Name<>})"},
		{"trigger": "Iter_Clear", "contents": "Iter_Clear(${1:IteratorArray:Name[]<>})"},
		{"trigger": "Iter_Alloc", "contents": "Iter_Alloc(${1:Iterator:Name<>})"},
		{"trigger": "Iter_FastClear", "contents": "Iter_FastClear(${1:IteratorArray:Name[]<>})"},
		{"trigger": "Iter_Next", "contents": "Iter_Next(${1:Iterator:Name<>}, ${2:current_index})"},
		{"trigger": "Iter_Prev", "contents": "Iter_Prev(${1:Iterator:Name<>}, ${2:current_index})"},
		{"trigger": "Iter_Last", "contents": "Iter_Last(${1:Iterator:Name<>})"},
		{"trigger": "Iter_First", "contents": "Iter_First(${1:Iterator:Name<>})"},
		{"trigger": "Iter_Begin", "contents": "Iter_Begin(${1:Iterator:Name<>})"},
		{"trigger": "Iter_End", "contents": "Iter_End(${1:Iterator:Name<>})"},
		{"trigger": "Iter_TrueArray", "contents": "Iter_TrueArray(${1:Iterator:Name<>})"},
		{"trigger": "Iter_TrueCount", "contents": "Iter_TrueCount(${1:Iterator:Name<>})"},
		{"trigger": "Iter_TrueMulti", "contents": "Iter_TrueMulti(${1:Iterator:Name<>})"},
		{"trigger": "Iter_TrueSize", "contents": "Iter_TrueSize(${1:Iterator:Name<>})"},
		{"trigger": "Iter_Starts", "contents": "Iter_Starts(${1:Iterator:Name<>})"},
		{"trigger": "Iter_Size", "contents": "Iter_Size(${1:Iterator:Name<>})"},
		{"trigger": "Iter_Index", "contents": "Iter_Index(${1:Iterator:Name<>})"}
	]
}
